{"ast":null,"code":"var _jsxFileName = \"/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/UseEffect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Markdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseEffect() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [number, setNumber] = useState(0);\n  useEffect(() => {\n    console.log(\"use effect being called\");\n  });\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    console.log(\"use effect being called\");\n  }, []);\n  useEffect(() => {\n    console.log(\"use effect depends on count\");\n  }, [count]);\n  useEffect(() => {\n    console.log(\"use effect depends on name\");\n  }, [name]);\n  const markdown1 = `\n  useEffect(() => { // 1 -> callback function\n\n    // your side-effect code here.\n\n  }, [] // 2 -> dependency array)\n  `;\n  const markdown2 = `\n  export default function App() {\n\n    const [count, setCount] = useState(0)\n    \n    useEffect(() => {\n\n      console.log('use effect being called')\n\n    })\n  \n    return (\n\n      <div className=\"App\">\n\n        <button onClick={()=>setCount(count+1)}>Click</button>\n\n      </div>\n\n    );\n\n  }\n  `;\n  const markdown3 = `\n   const [count, setCount] = useState(0);\n\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n\n    console.log(\"use effect depends on count\");\n\n  }, [count]);\n\n  useEffect(() => {\n\n    console.log(\"use effect depends on name\");\n\n  }, [name]);\n  `;\n  const markdown4 = `\n     return(\n        <button onClick={() => setCount(count + 1)}>Set count</button>\n\n      <button style={{ marginLeft: 20 }} onClick={() => setName(\"saad\")}>\n\n        Set name\n        \n      </button>\n     );\n  `;\n  const markdown5 = `\n    const [count, setCount] = useState(0)\n  \n  useEffect(() => {\n\n    console.log('use effect being called')\n\n  }, [])\n\n  return (\n\n    <div className=\"App\">\n\n      <button onClick={()=>setCount(count+1)}>Click</button>\n\n    </div>\n\n  );\n\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(UseEffect, \"pbdsr77km4d/Umwx0npQWBgXaVI=\");\n_c = UseEffect;\nvar _c;\n$RefreshReg$(_c, \"UseEffect\");","map":{"version":3,"names":["React","useEffect","useState","Markdown","jsxDEV","_jsxDEV","UseEffect","_s","count","setCount","number","setNumber","console","log","name","setName","markdown1","markdown2","markdown3","markdown4","markdown5","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/UseEffect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Markdown from \"react-markdown\";\n\nexport default function UseEffect() {\n  const [count, setCount] = useState(0);\n  const [number, setNumber] = useState(0);\n\n  useEffect(() => {\n    console.log(\"use effect being called\");\n  });\n\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    console.log(\"use effect being called\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"use effect depends on count\");\n  }, [count]);\n\n  useEffect(() => {\n    console.log(\"use effect depends on name\");\n  }, [name]);\n\n  const markdown1 = `\n  useEffect(() => { // 1 -> callback function\n\n    // your side-effect code here.\n\n  }, [] // 2 -> dependency array)\n  `;\n  const markdown2 = `\n  export default function App() {\n\n    const [count, setCount] = useState(0)\n    \n    useEffect(() => {\n\n      console.log('use effect being called')\n\n    })\n  \n    return (\n\n      <div className=\"App\">\n\n        <button onClick={()=>setCount(count+1)}>Click</button>\n\n      </div>\n\n    );\n\n  }\n  `;\n  const markdown3 = `\n   const [count, setCount] = useState(0);\n\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n\n    console.log(\"use effect depends on count\");\n\n  }, [count]);\n\n  useEffect(() => {\n\n    console.log(\"use effect depends on name\");\n\n  }, [name]);\n  `;\n  const markdown4 = `\n     return(\n        <button onClick={() => setCount(count + 1)}>Set count</button>\n\n      <button style={{ marginLeft: 20 }} onClick={() => setName(\"saad\")}>\n\n        Set name\n        \n      </button>\n     );\n  `;\n  const markdown5 = `\n    const [count, setCount] = useState(0)\n  \n  useEffect(() => {\n\n    console.log('use effect being called')\n\n  }, [])\n\n  return (\n\n    <div className=\"App\">\n\n      <button onClick={()=>setCount(count+1)}>Click</button>\n\n    </div>\n\n  );\n\n  `;\n  return (\n    <div>\n      \n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC,CAAC,CAAC;EAEF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEXP,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEV,MAAME,SAAS,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAMC,SAAS,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAMC,SAAS,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAMC,SAAS,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAMC,SAAS,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,oBACEf,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACjB,EAAA,CAxGuBD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}