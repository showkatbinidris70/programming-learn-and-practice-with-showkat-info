{"ast":null,"code":"var _jsxFileName = \"/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/customhooks/DataFetch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadingMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"Todos is loading\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 24\n}, this);\nexport default function DataFetch() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"could not fetch the data\");\n      }\n      return res.json();\n    }).then(result => {\n      setUsers(result);\n      setIsLoading(false);\n    }).catch(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n  console.log(users);\n  const renderUsers = users.map(user => {\n    const {\n      id,\n      name,\n      username,\n      email,\n      phone,\n      website\n    } = user;\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      style: {\n        margin: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: website\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: renderUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n_s(DataFetch, \"orIfoGIwiwP7nB80OJr1GJG7XNg=\");\n_c = DataFetch;\nvar _c;\n$RefreshReg$(_c, \"DataFetch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","loadingMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","DataFetch","_s","users","setUsers","isLoading","setIsLoading","error","setError","fetch","then","res","ok","Error","json","result","catch","message","console","log","renderUsers","map","user","id","name","username","email","phone","website","style","margin","_c","$RefreshReg$"],"sources":["/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/customhooks/DataFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst loadingMessage = <p>Todos is loading</p>;\nexport default function DataFetch() {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      setIsLoading(true);\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(\"could not fetch the data\");\n          }\n          return res.json();\n        })\n        .then((result) => {\n          setUsers(result);\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          setError(error.message);\n        });\n    }, []);\n    console.log(users);\n    const renderUsers = users.map((user) => {\n      const { id, name, username, email, phone, website } = user;\n      return (\n        <article key={id} style={{ margin: \"2rem\" }}>\n          <h2>{id}</h2>\n          <h3>{name}</h3>\n          <p>{username}</p>\n          <p>{email}</p>\n          <p>{phone}</p>\n          <p>{website}</p>\n        </article>\n      );\n    });\n  \n    return (\n      <div>\n        {isLoading && <p>Loading...</p>}\n        {error ? <p>{error}</p> : <section>{renderUsers}</section>}\n      </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}