{"ast":null,"code":"var _jsxFileName = \"/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/UseCallback.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport Message from \"./Message\";\nimport Markdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseCallback() {\n  _s();\n  const [num, setNum] = useState(0);\n  const [toggle, setToggle] = useState(false);\n  console.log(\"call back render\");\n  const handleIncrementMessage = useCallback(() => {\n    setNum(num + 1);\n  }, []);\n  const markdown1 = `\n  const [num, setNum] = useState(0);\n\n  const [toggle, setToggle] = useState(false);\n\n  console.log(\"call back render\");\n\n  const handleIncrementMessage = useCallback(() => {\n\n    setNum(num + 1);\n    \n  }, []);\n  \n  `;\n  const markdown2 = `\n  return (\n\n    <div>\n\n      {toggle ? \"On\" : \"False\"}\n\n      <button\n\n        className=\"btn btn-primary ms-3\"\n\n        onClick={() => {\n\n          setToggle(!toggle);\n\n        }}\n\n      >\n        Toggle\n\n      </button>\n\n      <p className=\"py-2 px-3 rounded markdownBgColor\">\n\n        <Markdown>{markdown1}</Markdown>\n\n      </p>\n\n      <h1>Initial Value : {num}</h1>\n\n      <button\n\n        className=\"btn btn-primary\"\n\n        onClick={() => {\n\n          setNum((num) => num + 1);\n\n        }}\n\n      >\n        Increment\n\n      </button>\n\n      <Message\n\n        initialValueOfMsg={num}\n\n        onHangleIncrement={handleIncrementMessage}\n\n      />\n\n    </div>\n\n  );\n  \n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"fs-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-bold\",\n        children: \"Use Callback : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), \"useCallback \\u0993 useMemo \\u098F\\u09B0 \\u09AE\\u09A4\\u09CB Unnecessary code \\u09AF\\u09C7\\u09A8 render \\u09A8\\u09BE \\u09B9\\u09DF \\u09A4\\u09BE\\u09B0 \\u099C\\u09A8\\u09CD\\u09AF \\u09AC\\u09CD\\u09AF\\u09AC\\u09B9\\u09BE\\u09B0 \\u0995\\u09B0\\u09BE \\u09B9\\u09DF \\u0964 useCallback \\u09AE\\u09C2\\u09B2\\u09A4 use \\u09B9\\u09DF state \\u098F\\u09B0 value \\u09AF\\u09A6\\u09BF change \\u09A8\\u09BE \\u09B9\\u09DF \\u09A4\\u09BE\\u09B9\\u09B2\\u09C7 Callback function \\u0993 \\u09AF\\u09C7\\u09A8 define \\u09A8\\u09BE \\u09B9\\u09DF\\u0964\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), toggle ? \"On\" : \"False\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary ms-3\",\n      onClick: () => {\n        setToggle(!toggle);\n      },\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"py-2 px-3 rounded markdownBgColor\",\n      children: /*#__PURE__*/_jsxDEV(Markdown, {\n        children: markdown1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"py-2 px-3 rounded markdownBgColor\",\n      children: /*#__PURE__*/_jsxDEV(Markdown, {\n        children: markdown2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Parent Initial Value : \", num]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setNum(num => num + 1);\n      },\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      initialValueOfMsg: num,\n      onHangleIncrement: handleIncrementMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(UseCallback, \"rQnqqc8rNmxdRpcIiceS8sGUAj4=\");\n_c = UseCallback;\nvar _c;\n$RefreshReg$(_c, \"UseCallback\");","map":{"version":3,"names":["React","useCallback","useState","Message","Markdown","jsxDEV","_jsxDEV","UseCallback","_s","num","setNum","toggle","setToggle","console","log","handleIncrementMessage","markdown1","markdown2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","initialValueOfMsg","onHangleIncrement","_c","$RefreshReg$"],"sources":["/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/UseCallback.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport Message from \"./Message\";\nimport Markdown from \"react-markdown\";\n\nexport default function UseCallback() {\n  const [num, setNum] = useState(0);\n  const [toggle, setToggle] = useState(false);\n  console.log(\"call back render\");\n  const handleIncrementMessage = useCallback(() => {\n    setNum(num + 1);\n  }, []);\n  const markdown1 = `\n  const [num, setNum] = useState(0);\n\n  const [toggle, setToggle] = useState(false);\n\n  console.log(\"call back render\");\n\n  const handleIncrementMessage = useCallback(() => {\n\n    setNum(num + 1);\n    \n  }, []);\n  \n  `;\n  const markdown2 = `\n  return (\n\n    <div>\n\n      {toggle ? \"On\" : \"False\"}\n\n      <button\n\n        className=\"btn btn-primary ms-3\"\n\n        onClick={() => {\n\n          setToggle(!toggle);\n\n        }}\n\n      >\n        Toggle\n\n      </button>\n\n      <p className=\"py-2 px-3 rounded markdownBgColor\">\n\n        <Markdown>{markdown1}</Markdown>\n\n      </p>\n\n      <h1>Initial Value : {num}</h1>\n\n      <button\n\n        className=\"btn btn-primary\"\n\n        onClick={() => {\n\n          setNum((num) => num + 1);\n\n        }}\n\n      >\n        Increment\n\n      </button>\n\n      <Message\n\n        initialValueOfMsg={num}\n\n        onHangleIncrement={handleIncrementMessage}\n\n      />\n\n    </div>\n\n  );\n  \n  `;\n  return (\n    <div>\n    <p className=\"fs-5\"><span className=\"text-bold\">Use Callback : </span>useCallback ও useMemo এর মতো Unnecessary code যেন render না হয় তার জন্য ব্যবহার করা হয় । useCallback মূলত use হয় state এর value যদি change না হয় তাহলে Callback function ও যেন \n    define না হয়।\n    </p>\n      {toggle ? \"On\" : \"False\"}\n      <button\n        className=\"btn btn-primary ms-3\"\n        onClick={() => {\n          setToggle(!toggle);\n        }}\n      >\n        Toggle\n      </button>\n      <p className=\"py-2 px-3 rounded markdownBgColor\">\n        <Markdown>{markdown1}</Markdown>\n      </p>\n      <p className=\"py-2 px-3 rounded markdownBgColor\">\n        <Markdown>{markdown2}</Markdown>\n      </p>\n      <h1>Parent Initial Value : {num}</h1>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setNum((num) => num + 1);\n        }}\n      >\n        Increment\n      </button>\n      <Message\n        initialValueOfMsg={num}\n        onHangleIncrement={handleIncrementMessage}\n      />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}