{"ast":null,"code":"var _jsxFileName = \"/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/customhooks/DataFetch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataFetch() {\n  _s();\n  const [todos, setTodos] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res => {\n      if (!res.ok) {\n        throw Error(\"feathing is not successfull\");\n      } else {\n        return res.json();\n      }\n    }).then(data => {\n      setTodos(data);\n      setLoading(false);\n      setError(null);\n    }).catch(error => {\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []);\n  const loadingMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Todos is loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 24\n  }, this);\n  const errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this);\n  const todosElement = todos && todos.map(todo => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.title\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  });\n  console.log(todosElement);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Custom Hooks is used for reuse the code. It is used for difference API's\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), isLoading && loadingMessage, todosElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(DataFetch, \"TYSyR5s9FHRDpEajAn1l8fNpmos=\");\n_c = DataFetch;\nvar _c;\n$RefreshReg$(_c, \"DataFetch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DataFetch","_s","todos","setTodos","isLoading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","catch","message","loadingMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","todosElement","map","todo","title","id","console","log","_c","$RefreshReg$"],"sources":["/home/nanosoft/Desktop/showkat/shihab/programming-learn-and-practice-with-showkat-info/src/components/customhooks/DataFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nexport default function DataFetch() {\n  const [todos, setTodos] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"feathing is not successfull\");\n        } else {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        setTodos(data);\n        setLoading(false);\n        setError(null);\n      })\n      .catch((error) => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []);\nconst loadingMessage = <p>Todos is loading</p>;\nconst errorMessage = <p>{error}</p>;\n  \n  const todosElement =\n    todos &&\n    todos.map((todo) => {\n      return <p key={todo.id}>{todo.title}</p>;\n    });\n  console.log(todosElement);\n  return (\n    <div>\n      <h1>\n        Custom Hooks is used for reuse the code. It is used for difference API's\n      </h1>\n      {error && <p>{error}</p>}\n      {isLoading && loadingMessage}\n      {todosElement}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAM;QACL,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdX,QAAQ,CAACW,IAAI,CAAC;MACdT,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDQ,KAAK,CAAET,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MACvBX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACR,MAAMY,cAAc,gBAAGlB,OAAA;IAAAmB,QAAA,EAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC9C,MAAMC,YAAY,gBAAGxB,OAAA;IAAAmB,QAAA,EAAIZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEjC,MAAME,YAAY,GAChBtB,KAAK,IACLA,KAAK,CAACuB,GAAG,CAAEC,IAAI,IAAK;IAClB,oBAAO3B,OAAA;MAAAmB,QAAA,EAAkBQ,IAAI,CAACC;IAAK,GAApBD,IAAI,CAACE,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC;EAC1C,CAAC,CAAC;EACJO,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EACzB,oBACEzB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJhB,KAAK,iBAAIP,OAAA;MAAAmB,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBlB,SAAS,IAAIa,cAAc,EAC3BO,YAAY;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACrB,EAAA,CA3CuBD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}